{"version":3,"sources":["Component/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","useState","text","setText","localStorage","getItem","JSON","parse","list","setList","useEffect","setItem","stringify","className","href","type","placeholder","value","onChange","e","target","onClick","preventDefault","map","item","index","id","update","filter","removeHandler","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLAae,SAASA,IAEpB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAXNG,aAAaC,QAAQ,SAE5BC,KAAKC,MAAMH,aAAaC,QAAQ,UAEhC,IAOX,mBAAOG,EAAP,KAAaC,EAAb,KA6BA,OAJAC,qBAAU,WACNN,aAAaO,QAAQ,QAASL,KAAKM,UAAUJ,MAC9C,CAACA,IAGA,qCACI,sBAAKK,UAAU,SAAf,UACI,0CACA,oCAAM,mBAAGC,KAAK,2BAAR,iCAIV,sBAAKD,UAAU,OAAf,UAEI,iCACI,uBACIE,KAAK,OACLC,YAAY,eACZC,MAAOf,EACPgB,SAAU,SAACC,GAAD,OAAOhB,EAAQgB,EAAEC,OAAOH,UAEtC,wBAAQI,QA1CR,SAACF,GACbA,EAAEG,iBACEpB,IAGAO,EAAQ,GAAD,mBAAKD,GAAL,CAAWN,KAClBC,EAAQ,MAoCA,oBAIJ,qBAAKU,UAAU,QAAf,SAEIL,EAAKe,KAAI,SAACC,EAAMC,GAAP,OACL,sBAAKZ,UAAU,OAAf,UACI,+BAAOY,EAAQ,IACf,4BAAID,IACJ,wBAAQH,QAAS,kBAxCnB,SAACK,GACnB,IAAMC,EAASnB,EAAKoB,QAAO,SAACJ,EAAMC,GAC9B,OAAOA,IAAUC,KAErBjB,EAAQkB,GAoCmCE,CAAcJ,IAArC,sBAHuBA,WAUvC,qBAAKZ,UAAU,SAAf,SACI,6DAA+B,mBAAGC,KAAK,2BAAR,mCC7E/C,IAOegB,EAPH,WACR,OACI,mCACI,cAAC9B,EAAD,OCMG+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.6be1df85.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\n\r\n// create a localStorage\r\nconst getLocalList = () => {\r\n    const localList = localStorage.getItem('lists');\r\n    if(localList){\r\n        return JSON.parse(localStorage.getItem('lists'));\r\n    }else{\r\n        return []\r\n    }\r\n}\r\n\r\nexport default function Todo(){\r\n\r\n    const [text, setText] = useState(''); //input value will store in text variable\r\n    const [list, setList] = useState(getLocalList()); //this is a list where all item will store\r\n\r\n\r\n    // addItem function helps to add item in list array\r\n    const addItem = (e) => {\r\n        e.preventDefault();\r\n        if(!text){\r\n            // blank input\r\n        }else{\r\n            setList([...list, text]);\r\n            setText('');\r\n        }\r\n    }\r\n\r\n\r\n    // removehandler function will delete item by clicking on delete button\r\n    const removeHandler = (id) => {\r\n        const update = list.filter((item, index) => {\r\n            return index !== id;\r\n        })\r\n        setList(update);\r\n    }\r\n\r\n\r\n    // set items in localStorage\r\n    useEffect(() => {\r\n        localStorage.setItem('lists', JSON.stringify(list))\r\n    }, [list])\r\n\r\n    return(\r\n        <>\r\n            <div className=\"header\">\r\n                <h3>Todo App</h3>\r\n                <p>By <a href=\"https://zisanurhaque.com\">Zisanur Haque</a></p>\r\n            </div>\r\n\r\n            {/* UI design*/}\r\n            <div className=\"main\">\r\n                {/* Input Design */}\r\n                <form>\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"type here...\"\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                    />\r\n                    <button onClick={addItem}>Add</button>\r\n                </form>\r\n\r\n                {/* Data Lists */}\r\n                <div className=\"datas\">\r\n                {\r\n                    list.map((item, index) => (\r\n                        <div className=\"list\" key={index}>\r\n                            <span>{index + 1}</span>\r\n                            <p>{item}</p>\r\n                            <button onClick={() => removeHandler(index)}>Delete</button>\r\n                        </div>\r\n                    ))\r\n                }\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"footer\">\r\n                <p>Copyright 2021 | Powered By <a href=\"https://zisanurhaque.com\">Zisanur Haque</a></p>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from \"react\";\nimport Todo from \"./Component/Todo\";\nimport \"./style.scss\";\nconst App = () =>{\n    return(\n        <>\n            <Todo/>\n        </>\n    )\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../src/style.scss';\nimport App from \"./App\";\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}